<?php

/**
 * @file
 * Module file for the Amazon send to kindle module.
 * This module will integrate the Send to kindle button provided by
 * the www.amazon.com
 */

/**
 * Implements hook_init().
 */
function amazon_send_to_kindle_init() {
  // Add widget.js file from the amazon cloud front.
  drupal_add_js('https://d1xnn692s7u6t6.cloudfront.net/widget.js', 'external');

  // Include the javascript file provided by the Amazon.
  drupal_add_js(drupal_get_path('module', 'amazon_send_to_kindle') . '/amazon_send_to_kindle.js', 'file');
}
/**
 * Implements hook_permission().
 */
function amazon_send_to_kindle_ipermission() {
  return array(
    'administer amazon send to kindle ' => array(
      'title' => t('Administer Amazon Send to Kindle Button.'),
      'description' => t('Perform administration tasks for amazon send to kindle button.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function amazon_send_to_kindle_menu() {
  $items['admin/config/social'] = array(
    'title' => 'Social',
    'description' => 'Manage how your site interacts with Social Networks',
    'position' => 'right',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/social/send_to_kindle'] = array(
    'title' => 'Amazon Send to Kindle Integration.',
    'description' => 'Administer Amazon Send to Kindle button.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('send_to_kindle_admin_settings'),
    'access arguments' => array('administer send to kindle'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of system_settings_form().
 */
function send_to_kindle_admin_settings($form, $form_state) {
  $node_types = node_type_get_types();
  $options = array();
  foreach ($node_types as $k => $v) {
    $options[$k] = $v->name;
  }
  $form['send_to_kindle_nodes'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Content Types'),
    '#description' => t('Which content types to enable the send to kindle buttons for.'),
    '#default_value' => variable_get('send_to_kindle_nodes', array()),
    '#options' => $options,
  );
  $form['send_to_kindle_node_type'] = array(
    '#type' => 'radios',
    '#title' => t('Node Type'),
    '#description' => t('The type of node that the buttons should be displayed on.'),
    '#default_value' => variable_get('send_to_kindle_node_type', 'full'),
    '#options' => array('full' => 'Full Node', 'teaser' => 'Teaser', 'both' => 'Full Nodes and Teasers'),
  );
  $form['send_to_kindle_style'] = array(
    '#type' => 'fieldset',
    '#title' => t('Style Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['send_to_kindle_style']['button_text'] = array(
    '#type' => 'select',
    '#title' => t('Button Text'),
    '#options' => array(0 => t('No Text'), 1 => t('Kindle'), 2 => t('Send to Kindle')),
    '#default_value' => variable_get('button_text', 2),
  );
  $form['send_to_kindle_style']['button_font'] = array(
    '#type' => 'select',
    '#title' => t('Fonts'),
    '#options' => array(0 => t('Sans Serif'), 1 => t('Tahoma'), 2 => t('Verdana'), 3 => t('Arial')),
    '#default_value' => variable_get('button_font', 0),
  );
  $form['send_to_kindle_style']['icon_color'] = array(
    '#type' => 'radios',
    '#title' => t('Icon color'),
    '#options' => array(0 => t('Dark'), 1 => t('Light')),
    '#default_value' => variable_get('icon_color', 0),
  );
  $form['send_to_kindle_style']['icon_size'] = array(
    '#type' => 'radios',
    '#title' => t('Icon Size'),
    '#options' => array(0 => t('Small'), 1 => t('Large')),
    '#default_value' => variable_get('icon_size', 0),
  );
  $form['send_to_kindle_style']['icon_theme'] = array(
    '#type' => 'radios',
    '#title' => t('Theme'),
    '#options' => array(0 => t('Light'), 1 => t('Dark')),
    '#default_value' => variable_get('icon_theme', 0),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_node_view().
 */
function amazon_send_to_kindle_node_view($node, $view_mode = 'full', $langcode = NULL) {
  $content_types = variable_get('send_to_kindle_nodes', array());
  $node_types = variable_get('send_to_kindle_node_type', 'full');

  if ($content_types[$node->type] != NULL && ($node_types == $view_mode || $node_types == 'both')) {
    $url = url(drupal_lookup_path('alias', 'node/' . $node->nid), array('absolute' => TRUE));
    if (!$url) {
      $url = url('node/' . $node->nid, array('absolute' => TRUE));
    }
    $url_encoded = urlencode($url);

    // Append the HTML given by the Amazon here.
    // We are fetching from the text area variable which we stored during module
    // configuration.
    // Assign the HTML with the node render content.
    $output = variable_get('send_to_kindle_html', NULL);
    $node->content['amazon-send-to-kindle'] = array(
      '#markup' => $output,
      '#weight' => 20,
    );
  }
}
